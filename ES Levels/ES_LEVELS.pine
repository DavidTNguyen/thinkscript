//@version=5
indicator("ES Levels: Current Trade Levels", overlay=true, max_lines_count=500, max_labels_count=500)

// === ES Levels: Current Trade Levels ===
// Updated: October 28, 2025
// Current ES: 6927.50 (hit today's target, first micro-dip in two days)
// Resistance (above): 6942 (remains above)
// Support (below): 6901 (watch sweeps), 6889

// === Key Support & Resistance Levels ===
level1 = input.float(6942, "R1: Remains above", group="Resistance Levels")
level1_thickness = input.int(2, "R1 Line Weight", minval=1, maxval=5, group="Resistance Levels")
level2 = input.float(6928, "Today's target (hit 6927.50)", group="Reference Levels")
level2_thickness = input.int(2, "Line Weight", minval=1, maxval=5, group="Reference Levels")
level3 = input.float(6918, "Today's target slate", group="Reference Levels")
level3_thickness = input.int(2, "Line Weight", minval=1, maxval=5, group="Reference Levels")

level4 = input.float(6901, "S1: Support (watch sweeps)", group="Support Levels")
level4_thickness = input.int(3, "S1 Line Weight", minval=1, maxval=5, group="Support Levels")
level5 = input.float(6889, "S2: Support below", group="Support Levels")
level5_thickness = input.int(3, "S2 Line Weight", minval=1, maxval=5, group="Support Levels")

// Alert Settings
enableAlerts = input.bool(true, "Enable Alerts", group="Alert Settings")
alertSensitivity = input.float(0.5, "Alert Sensitivity (pts)", minval=0.1, maxval=5.0, group="Alert Settings")

// === Plot Levels ===
// Resistance Level
plot(level1, "R1: 6942", color=color.new(color.orange, 0), linewidth=level1_thickness, style=plot.style_line)
plot(level2, "6928 (Hit)", color=color.new(color.yellow, 0), linewidth=level2_thickness, style=plot.style_line)
plot(level3, "6918", color=color.new(color.fuchsia, 0), linewidth=level3_thickness, style=plot.style_line)

// Support Levels
plot(level4, "S1: 6901", color=color.new(color.aqua, 0), linewidth=level4_thickness, style=plot.style_line)
plot(level5, "S2: 6889", color=color.new(color.green, 0), linewidth=level5_thickness, style=plot.style_line)

// === Labels on Last Bar ===
if barstate.islast
    label.new(bar_index, level1, "R1: 6942", xloc=xloc.bar_index, yloc=yloc.price, color=color.new(color.orange, 80), textcolor=color.orange, style=label.style_label_left, size=size.small)
    label.new(bar_index, level2, "6928 (Hit)", xloc=xloc.bar_index, yloc=yloc.price, color=color.new(color.yellow, 80), textcolor=color.yellow, style=label.style_label_left, size=size.small)
    label.new(bar_index, level3, "6918", xloc=xloc.bar_index, yloc=yloc.price, color=color.new(color.fuchsia, 80), textcolor=color.fuchsia, style=label.style_label_left, size=size.small)
    label.new(bar_index, level4, "S1: 6901 (Watch Sweeps)", xloc=xloc.bar_index, yloc=yloc.price, color=color.new(color.aqua, 80), textcolor=color.aqua, style=label.style_label_right, size=size.small)
    label.new(bar_index, level5, "S2: 6889", xloc=xloc.bar_index, yloc=yloc.price, color=color.new(color.green, 80), textcolor=color.green, style=label.style_label_right, size=size.small)

// === Alert Conditions ===
// Breakout Alert
alertcondition(ta.crossover(close, level1), "ES 6942 Breakout", "ES 6942 BREAKOUT!")

// Support Break Alerts
alertcondition(ta.crossunder(close, level4), "ES Below 6901", "ES BELOW 6901! Watch Sweeps")
alertcondition(ta.crossunder(close, level5), "ES Below 6889", "ES BELOW 6889!")

// Testing Key Levels
testingR1 = close >= level1 - alertSensitivity and close <= level1 + alertSensitivity
testingS1 = close >= level4 - alertSensitivity and close <= level4 + alertSensitivity
testingS2 = close >= level5 - alertSensitivity and close <= level5 + alertSensitivity

alertcondition(testingR1, "ES Testing 6942", "ES Testing 6942")
alertcondition(testingS1, "ES Testing 6901", "ES Testing 6901 - Watch Sweeps")
alertcondition(testingS2, "ES Testing 6889", "ES Testing 6889")

// Bounce/Rejection Alerts
bounceS1 = low[1] <= level4 and close > level4 + 3
bounceS2 = low[1] <= level5 and close > level5 + 3
rejectR1 = high[1] >= level1 and close < level1 - 3

alertcondition(bounceS1, "ES Bounce 6901", "ES BOUNCE from 6901!")
alertcondition(bounceS2, "ES Bounce 6889", "ES BOUNCE from 6889!")
alertcondition(rejectR1, "ES Reject 6942", "ES REJECTION at 6942")

// Sweep Detection
sweepS1 = low <= level4 and close > level4
alertcondition(sweepS1, "ES Sweep 6901", "ES SWEEP 6901 - Potential Bounce")

// === Market Structure Status ===
var table statusTable = table.new(position.top_right, 2, 7, border_width=1)

if barstate.islast
    table.cell(statusTable, 0, 0, "ES Trail Runner", text_color=color.white, bgcolor=color.new(color.gray, 50))
    table.cell(statusTable, 1, 0, str.tostring(close, "#.00"), text_color=color.yellow, bgcolor=color.new(color.gray, 50))
    
    table.cell(statusTable, 0, 1, "Hit Today", text_color=color.white, bgcolor=color.new(color.gray, 50))
    table.cell(statusTable, 1, 1, "6927.50", text_color=color.lime, bgcolor=color.new(color.gray, 50))
    
    table.cell(statusTable, 0, 2, "Watch", text_color=color.white, bgcolor=color.new(color.gray, 50))
    table.cell(statusTable, 1, 2, "6901 Sweeps", text_color=color.aqua, bgcolor=color.new(color.gray, 50))
    
    // Market Structure
    structure = close > level4 ? "TRAIL RUNNER MODE" : close >= level5 ? "SUPPORT ZONE 6889-6901" : "BELOW 6889"
    structureColor = close > level4 ? color.lime : close >= level5 ? color.aqua : color.red
    
    table.cell(statusTable, 0, 3, "Structure", text_color=color.white, bgcolor=color.new(color.gray, 50))
    table.cell(statusTable, 1, 3, structure, text_color=structureColor, bgcolor=color.new(color.gray, 50))
    
    // Trade Plan
    tradePlan = close >= level4 ? "TRAIL RUNNER" : "WATCH SWEEPS"
    planColor = close >= level4 ? color.lime : color.orange
    
    table.cell(statusTable, 0, 4, "Trade Plan", text_color=color.white, bgcolor=color.new(color.gray, 50))
    table.cell(statusTable, 1, 4, tradePlan, text_color=planColor, bgcolor=color.new(color.gray, 50))
    
    // Distance to Key Levels
    distTo6942 = level1 - close
    distFrom6901 = close - level4
    
    if close < level1
        table.cell(statusTable, 0, 5, "To 6942", text_color=color.white, bgcolor=color.new(color.gray, 50))
        table.cell(statusTable, 1, 5, str.tostring(distTo6942, "#.0") + " pts", text_color=color.orange, bgcolor=color.new(color.gray, 50))
    
    if close >= level4
        table.cell(statusTable, 0, 6, "Above 6901", text_color=color.white, bgcolor=color.new(color.gray, 50))
        table.cell(statusTable, 1, 6, "+" + str.tostring(distFrom6901, "#.0") + " pts", text_color=color.aqua, bgcolor=color.new(color.gray, 50))
    else
        table.cell(statusTable, 0, 6, "Below 6901", text_color=color.white, bgcolor=color.new(color.gray, 50))
        table.cell(statusTable, 1, 6, "-" + str.tostring(math.abs(distFrom6901), "#.0") + " pts", text_color=color.orange, bgcolor=color.new(color.gray, 50))

// Background color based on structure
bgcolor(close > level4 ? color.new(color.lime, 95) : close >= level5 ? color.new(color.aqua, 95) : color.new(color.red, 95), title="Structure Background")
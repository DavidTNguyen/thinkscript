## Gamma Strikes (Price Levels Only) â€” Cleaned Study

declare upper;
declare once_per_bar;

input strikes = 10;
input strikeSpacing = 5.0;
input manualCenterStrike = {default "false", "true"};
input centerStrike = 0.0;
input showLines = yes;

def openlevel = open(period = AggregationPeriod.DAY);
def base_strike = if manualCenterStrike then centerStrike else Round(openlevel, 0);

def k0  = base_strike;
def k1p = base_strike + strikeSpacing;
def k2p = base_strike + strikeSpacing * 2;
def k3p = base_strike + strikeSpacing * 3;
def k4p = base_strike + strikeSpacing * 4;
def k5p = base_strike + strikeSpacing * 5;
def k6p = base_strike + strikeSpacing * 6;
def k7p = base_strike + strikeSpacing * 7;
def k8p = base_strike + strikeSpacing * 8;
def k9p = base_strike + strikeSpacing * 9;
def k10p = base_strike + strikeSpacing * 10;

def k1m = base_strike - strikeSpacing;
def k2m = base_strike - strikeSpacing * 2;
def k3m = base_strike - strikeSpacing * 3;
def k4m = base_strike - strikeSpacing * 4;
def k5m = base_strike - strikeSpacing * 5;
def k6m = base_strike - strikeSpacing * 6;
def k7m = base_strike - strikeSpacing * 7;
def k8m = base_strike - strikeSpacing * 8;
def k9m = base_strike - strikeSpacing * 9;
def k10m = base_strike - strikeSpacing * 10;

plot k0line  = if showLines then k0  else Double.NaN;
plot k1pline = if showLines and strikes > 0 then k1p else Double.NaN;
plot k2pline = if showLines and strikes > 1 then k2p else Double.NaN;
plot k3pline = if showLines and strikes > 2 then k3p else Double.NaN;
plot k4pline = if showLines and strikes > 3 then k4p else Double.NaN;
plot k5pline = if showLines and strikes > 4 then k5p else Double.NaN;
plot k6pline = if showLines and strikes > 5 then k6p else Double.NaN;
plot k7pline = if showLines and strikes > 6 then k7p else Double.NaN;
plot k8pline = if showLines and strikes > 7 then k8p else Double.NaN;
plot k9pline = if showLines and strikes > 8 then k9p else Double.NaN;
plot k10pline = if showLines and strikes > 9 then k10p else Double.NaN;

plot k1mline = if showLines and strikes > 0 then k1m else Double.NaN;
plot k2mline = if showLines and strikes > 1 then k2m else Double.NaN;
plot k3mline = if showLines and strikes > 2 then k3m else Double.NaN;
plot k4mline = if showLines and strikes > 3 then k4m else Double.NaN;
plot k5mline = if showLines and strikes > 4 then k5m else Double.NaN;
plot k6mline = if showLines and strikes > 5 then k6m else Double.NaN;
plot k7mline = if showLines and strikes > 6 then k7m else Double.NaN;
plot k8mline = if showLines and strikes > 7 then k8m else Double.NaN;
plot k9mline = if showLines and strikes > 8 then k9m else Double.NaN;
plot k10mline = if showLines and strikes > 9 then k10m else Double.NaN;

k0line.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k1pline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k2pline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k3pline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k4pline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k5pline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k6pline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k7pline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k8pline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k9pline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k10pline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);

k1mline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k2mline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k3mline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k4mline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k5mline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k6mline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k7mline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k8mline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k9mline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
k10mline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);

AddLabel(yes, "Base Strike: " + base_strike, Color.WHITE);
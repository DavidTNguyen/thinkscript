# RSI Divergence Indicator - VietRoadie
# Identifies Regular and Hidden Bullish/Bearish Divergences
# Plots lines and labels on price and RSI, with color coding

input rsiLength = 14;
input price = close;
input overBought = 70;
input overSold = 30;
input lookback = 20; # How many bars to look back for pivots

# --- RSI Calculation ---
def rsi = RSI(price, rsiLength);

# --- Find Pivots (Highs/Lows) ---
def pivotHigh = high == Highest(high, lookback);
def pivotLow = low == Lowest(low, lookback);
# Use a constant for RSI pivot detection
script rsiPivotHighScript {
    input rsiVal = 0.0;
    plot out = rsiVal == Highest(rsiVal, 20); # 20 is constant
}
script rsiPivotLowScript {
    input rsiVal = 0.0;
    plot out = rsiVal == Lowest(rsiVal, 20); # 20 is constant
}
def rsiPivotHigh = rsiPivotHighScript(rsi);
def rsiPivotLow = rsiPivotLowScript(rsi);

# --- Store Last Two Pivots (Price and RSI) ---
def pricePivot = if pivotHigh or pivotLow then price else Double.NaN;
def rsiPivot = if rsiPivotHigh or rsiPivotLow then rsi else Double.NaN;

def pricePivotBar = if !IsNaN(pricePivot) then BarNumber() else Double.NaN;
def rsiPivotBar = if !IsNaN(rsiPivot) then BarNumber() else Double.NaN;

def pricePivot1 = if !IsNaN(pricePivot) then pricePivot else pricePivot1[1];
def pricePivot2 = if !IsNaN(pricePivot) and !IsNaN(pricePivot1[1]) then pricePivot1[1] else pricePivot2[1];
def pricePivotBar1 = if !IsNaN(pricePivotBar) then pricePivotBar else pricePivotBar1[1];
def pricePivotBar2 = if !IsNaN(pricePivotBar) and !IsNaN(pricePivotBar1[1]) then pricePivotBar1[1] else pricePivotBar2[1];

def rsiPivot1 = if !IsNaN(rsiPivot) then rsiPivot else rsiPivot1[1];
def rsiPivot2 = if !IsNaN(rsiPivot) and !IsNaN(rsiPivot1[1]) then rsiPivot1[1] else rsiPivot2[1];
def rsiPivotBar1 = if !IsNaN(rsiPivotBar) then rsiPivotBar else rsiPivotBar1[1];
def rsiPivotBar2 = if !IsNaN(rsiPivotBar) and !IsNaN(rsiPivotBar1[1]) then rsiPivotBar1[1] else rsiPivotBar2[1];

# --- Detect Divergences ---
# Regular Bullish: Price lower low, RSI higher low
# Regular Bearish: Price higher high, RSI lower high
# Hidden Bullish: Price higher low, RSI lower low
# Hidden Bearish: Price lower high, RSI higher high

def regBull = pivotLow and pricePivot1 < pricePivot2 and rsiPivot1 > rsiPivot2;
def regBear = pivotHigh and pricePivot1 > pricePivot2 and rsiPivot1 < rsiPivot2;
def hidBull = pivotLow and pricePivot1 > pricePivot2 and rsiPivot1 < rsiPivot2;
def hidBear = pivotHigh and pricePivot1 < pricePivot2 and rsiPivot1 > rsiPivot2;

# --- Plot Divergence Lines on Price (Separate Plots for Each Type) ---
plot PriceDivLineRegBull = if regBull and !IsNaN(pricePivot2) and !IsNaN(pricePivot1) and (BarNumber() == pricePivotBar2 or BarNumber() == pricePivotBar1) then if BarNumber() == pricePivotBar2 then pricePivot2 else pricePivot1 else Double.NaN;
PriceDivLineRegBull.SetDefaultColor(Color.GREEN);
PriceDivLineRegBull.SetLineWeight(2);
PriceDivLineRegBull.SetStyle(Curve.SHORT_DASH);

plot PriceDivLineHidBull = if hidBull and !IsNaN(pricePivot2) and !IsNaN(pricePivot1) and (BarNumber() == pricePivotBar2 or BarNumber() == pricePivotBar1) then if BarNumber() == pricePivotBar2 then pricePivot2 else pricePivot1 else Double.NaN;
PriceDivLineHidBull.SetDefaultColor(Color.DARK_GREEN);
PriceDivLineHidBull.SetLineWeight(2);
PriceDivLineHidBull.SetStyle(Curve.SHORT_DASH);

plot PriceDivLineRegBear = if regBear and !IsNaN(pricePivot2) and !IsNaN(pricePivot1) and (BarNumber() == pricePivotBar2 or BarNumber() == pricePivotBar1) then if BarNumber() == pricePivotBar2 then pricePivot2 else pricePivot1 else Double.NaN;
PriceDivLineRegBear.SetDefaultColor(Color.RED);
PriceDivLineRegBear.SetLineWeight(2);
PriceDivLineRegBear.SetStyle(Curve.SHORT_DASH);

plot PriceDivLineHidBear = if hidBear and !IsNaN(pricePivot2) and !IsNaN(pricePivot1) and (BarNumber() == pricePivotBar2 or BarNumber() == pricePivotBar1) then if BarNumber() == pricePivotBar2 then pricePivot2 else pricePivot1 else Double.NaN;
PriceDivLineHidBear.SetDefaultColor(Color.DARK_RED);
PriceDivLineHidBear.SetLineWeight(2);
PriceDivLineHidBear.SetStyle(Curve.SHORT_DASH);

# --- Plot Divergence Lines on RSI (Separate Plots for Each Type) ---
plot RSIDivLineRegBull = if regBull and !IsNaN(rsiPivot2) and !IsNaN(rsiPivot1) and (BarNumber() == rsiPivotBar2 or BarNumber() == rsiPivotBar1) then if BarNumber() == rsiPivotBar2 then rsiPivot2 else rsiPivot1 else Double.NaN;
RSIDivLineRegBull.SetDefaultColor(Color.GREEN);
RSIDivLineRegBull.SetLineWeight(2);
RSIDivLineRegBull.SetStyle(Curve.SHORT_DASH);

plot RSIDivLineHidBull = if hidBull and !IsNaN(rsiPivot2) and !IsNaN(rsiPivot1) and (BarNumber() == rsiPivotBar2 or BarNumber() == rsiPivotBar1) then if BarNumber() == rsiPivotBar2 then rsiPivot2 else rsiPivot1 else Double.NaN;
RSIDivLineHidBull.SetDefaultColor(Color.DARK_GREEN);
RSIDivLineHidBull.SetLineWeight(2);
RSIDivLineHidBull.SetStyle(Curve.SHORT_DASH);

plot RSIDivLineRegBear = if regBear and !IsNaN(rsiPivot2) and !IsNaN(rsiPivot1) and (BarNumber() == rsiPivotBar2 or BarNumber() == rsiPivotBar1) then if BarNumber() == rsiPivotBar2 then rsiPivot2 else rsiPivot1 else Double.NaN;
RSIDivLineRegBear.SetDefaultColor(Color.RED);
RSIDivLineRegBear.SetLineWeight(2);
RSIDivLineRegBear.SetStyle(Curve.SHORT_DASH);

plot RSIDivLineHidBear = if hidBear and !IsNaN(rsiPivot2) and !IsNaN(rsiPivot1) and (BarNumber() == rsiPivotBar2 or BarNumber() == rsiPivotBar1) then if BarNumber() == rsiPivotBar2 then rsiPivot2 else rsiPivot1 else Double.NaN;
RSIDivLineHidBear.SetDefaultColor(Color.DARK_RED);
RSIDivLineHidBear.SetLineWeight(2);
RSIDivLineHidBear.SetStyle(Curve.SHORT_DASH);

# --- Divergence Labels ---
AddChartBubble(regBull, low, "Reg Bullish", Color.GREEN, no);
AddChartBubble(regBear, high, "Reg Bearish", Color.RED, yes);
AddChartBubble(hidBull, low, "Hidden Bullish", Color.DARK_GREEN, no);
AddChartBubble(hidBear, high, "Hidden Bearish", Color.DARK_RED, yes);

# --- Alerts ---
Alert(regBull or hidBull, "RSI Bullish Divergence!", Alert.BAR, Sound.Bell);
Alert(regBear or hidBear, "RSI Bearish Divergence!", Alert.BAR, Sound.Bell);

# --- RSI Plot (for reference) ---
plot RSIline = rsi;
RSIline.SetDefaultColor(Color.GRAY);
RSIline.SetLineWeight(1);
RSIline.HideTitle();
RSIline.HideBubble();

plot OverBoughtLine = overBought;
OverBoughtLine.SetDefaultColor(Color.LIGHT_RED);
OverBoughtLine.SetStyle(Curve.SHORT_DASH);
OverBoughtLine.HideTitle();
OverBoughtLine.HideBubble();

plot OverSoldLine = overSold;
OverSoldLine.SetDefaultColor(Color.LIGHT_GREEN);
OverSoldLine.SetStyle(Curve.SHORT_DASH);
OverSoldLine.HideTitle();
OverSoldLine.HideBubble();

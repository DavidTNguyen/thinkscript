# === Session Range Liquidity Tracker - Optimized for 30m ES ===
# Tracks Asia, London, and NY session highs/lows
# Clean visualization for intraday trading

# === User Settings ===
input showAsiaSession = yes;
input showLondonSession = yes;
input showNYSession = yes;
input showSessionLabels = yes;
input showCurrentDayOnly = yes; # Only show today's levels
input extendLinesHours = 4; # Hours to extend lines after session end

# === Session Times (CST) ===
def AsiaStart = 1900;   # 7:00 PM
def AsiaEnd = 0100;     # 1:00 AM
def LondonStart = 0200; # 2:00 AM
def LondonEnd = 1000;   # 10:00 AM
def NYStart = 0700;     # 7:00 AM
def NYEnd = 1600;       # 4:00 PM

# === Session Detection ===
def asiaSession = (SecondsFromTime(1900) >= 0 or SecondsFromTime(0100) < 0);
def isAsia = asiaSession and showAsiaSession;
def isLondon = SecondsFromTime(0200) >= 0 and SecondsFromTime(1000) < 0 and showLondonSession;
def isNY = SecondsFromTime(0700) >= 0 and SecondsFromTime(1600) < 0 and showNYSession;

# === Day Tracking ===
def newDay = GetDay() != GetDay()[1];
def isToday = if showCurrentDayOnly then GetDay() == GetLastDay() else yes;

# === Session High/Low Calculation ===
def AsiaHigh = if isAsia then 
    if !isAsia[1] then high 
    else Max(high, AsiaHigh[1]) 
    else AsiaHigh[1];
    
def AsiaLow = if isAsia then 
    if !isAsia[1] then low 
    else Min(low, AsiaLow[1]) 
    else AsiaLow[1];

def LondonHigh = if isLondon then 
    if !isLondon[1] then high 
    else Max(high, LondonHigh[1]) 
    else LondonHigh[1];
    
def LondonLow = if isLondon then 
    if !isLondon[1] then low 
    else Min(low, LondonLow[1]) 
    else LondonLow[1];

def NYHigh = if isNY then 
    if !isNY[1] then high 
    else Max(high, NYHigh[1]) 
    else NYHigh[1];
    
def NYLow = if isNY then 
    if !isNY[1] then low 
    else Min(low, NYLow[1]) 
    else NYLow[1];

# === Session End Detection ===
def asiaJustEnded = isAsia[1] and !isAsia;
def londonJustEnded = isLondon[1] and !isLondon;
def nyJustEnded = isNY[1] and !isNY;

# === Calculate bars since session end ===
def barsPerHour = 2; # 30-minute chart = 2 bars per hour
def maxBarsToExtend = extendLinesHours * barsPerHour;

def asiaBarsSinceEnd = if asiaJustEnded then 0
    else if asiaBarsSinceEnd[1] >= 0 and asiaBarsSinceEnd[1] < maxBarsToExtend then asiaBarsSinceEnd[1] + 1
    else if newDay then -1
    else asiaBarsSinceEnd[1];

def londonBarsSinceEnd = if londonJustEnded then 0
    else if londonBarsSinceEnd[1] >= 0 and londonBarsSinceEnd[1] < maxBarsToExtend then londonBarsSinceEnd[1] + 1
    else if newDay then -1
    else londonBarsSinceEnd[1];

def nyBarsSinceEnd = if nyJustEnded then 0
    else if nyBarsSinceEnd[1] >= 0 and nyBarsSinceEnd[1] < maxBarsToExtend then nyBarsSinceEnd[1] + 1
    else if newDay then -1
    else nyBarsSinceEnd[1];

# === Store session values when session ends ===
def asiaHighVal = if asiaJustEnded then AsiaHigh[1]
    else if newDay then Double.NaN
    else if !IsNaN(asiaHighVal[1]) then asiaHighVal[1]
    else Double.NaN;

def asiaLowVal = if asiaJustEnded then AsiaLow[1]
    else if newDay then Double.NaN
    else if !IsNaN(asiaLowVal[1]) then asiaLowVal[1]
    else Double.NaN;

def londonHighVal = if londonJustEnded then LondonHigh[1]
    else if newDay then Double.NaN
    else if !IsNaN(londonHighVal[1]) then londonHighVal[1]
    else Double.NaN;

def londonLowVal = if londonJustEnded then LondonLow[1]
    else if newDay then Double.NaN
    else if !IsNaN(londonLowVal[1]) then londonLowVal[1]
    else Double.NaN;

def nyHighVal = if nyJustEnded then NYHigh[1]
    else if newDay then Double.NaN
    else if !IsNaN(nyHighVal[1]) then nyHighVal[1]
    else Double.NaN;

def nyLowVal = if nyJustEnded then NYLow[1]
    else if newDay then Double.NaN
    else if !IsNaN(nyLowVal[1]) then nyLowVal[1]
    else Double.NaN;

# === Plot levels only during extension period ===
def showAsiaLevels = asiaBarsSinceEnd >= 0 and asiaBarsSinceEnd < maxBarsToExtend and isToday;
def showLondonLevels = londonBarsSinceEnd >= 0 and londonBarsSinceEnd < maxBarsToExtend and isToday;
def showNYLevels = nyBarsSinceEnd >= 0 and nyBarsSinceEnd < maxBarsToExtend and isToday;

# Asia Session Levels
plot AsiaHi = if showAsiaLevels then asiaHighVal else Double.NaN;
plot AsiaLo = if showAsiaLevels then asiaLowVal else Double.NaN;

AsiaHi.SetDefaultColor(Color.CYAN);
AsiaHi.SetLineWeight(2);
AsiaHi.SetStyle(Curve.FIRM);

AsiaLo.SetDefaultColor(Color.CYAN);
AsiaLo.SetLineWeight(2);
AsiaLo.SetStyle(Curve.FIRM);

# London Session Levels
plot LondonHi = if showLondonLevels then londonHighVal else Double.NaN;
plot LondonLo = if showLondonLevels then londonLowVal else Double.NaN;

LondonHi.SetDefaultColor(Color.YELLOW);
LondonHi.SetLineWeight(2);
LondonHi.SetStyle(Curve.FIRM);

LondonLo.SetDefaultColor(Color.YELLOW);
LondonLo.SetLineWeight(2);
LondonLo.SetStyle(Curve.FIRM);

# NY Session Levels
plot NYHi = if showNYLevels then nyHighVal else Double.NaN;
plot NYLo = if showNYLevels then nyLowVal else Double.NaN;

NYHi.SetDefaultColor(Color.GREEN);
NYHi.SetLineWeight(2);
NYHi.SetStyle(Curve.FIRM);

NYLo.SetDefaultColor(Color.GREEN);
NYLo.SetLineWeight(2);
NYLo.SetStyle(Curve.FIRM);

# === Bubbles - Only at session end, only on last occurrence ===
def isLastBar = IsNaN(close[-1]) and !IsNaN(close);
def showAsiaBubble = asiaJustEnded and showSessionLabels;
def showLondonBubble = londonJustEnded and showSessionLabels;
def showNYBubble = nyJustEnded and showSessionLabels;

AddChartBubble(showAsiaBubble, asiaHighVal, "A: " + AsPrice(asiaHighVal), Color.CYAN, yes);
AddChartBubble(showAsiaBubble, asiaLowVal, "A: " + AsPrice(asiaLowVal), Color.CYAN, no);

AddChartBubble(showLondonBubble, londonHighVal, "L: " + AsPrice(londonHighVal), Color.YELLOW, yes);
AddChartBubble(showLondonBubble, londonLowVal, "L: " + AsPrice(londonLowVal), Color.YELLOW, no);

AddChartBubble(showNYBubble, nyHighVal, "NY: " + AsPrice(nyHighVal), Color.GREEN, yes);
AddChartBubble(showNYBubble, nyLowVal, "NY: " + AsPrice(nyLowVal), Color.GREEN, no);

# === Status Labels ===
AddLabel(yes, "Session Ranges", Color.GRAY);
AddLabel(showAsiaSession, "Asia: " + AsPrice(asiaHighVal) + " / " + AsPrice(asiaLowVal), Color.CYAN);
AddLabel(showLondonSession, "London: " + AsPrice(londonHighVal) + " / " + AsPrice(londonLowVal), Color.YELLOW);
AddLabel(showNYSession, "NY: " + AsPrice(nyHighVal) + " / " + AsPrice(nyLowVal), Color.GREEN);
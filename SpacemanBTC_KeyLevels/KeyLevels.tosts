# Advanced Multi-Timeframe & Session Levels Plotter (CST)
# Author: Copilot

# ---- INPUTS ----
input show4HOpen = yes;
input show4HPrevHL = no;
input show4HPrevMid = no;
input show4HShortHand = no;
input show4HColor = yes;

input showDailyOpen = yes;
input showDailyPrevHL = no;
input showDailyPrevMid = no;
input showDailyShortHand = no;
input showDailyColor = yes;

input showMondayRange = yes;
input showMondayMid = yes;
input showMondayShortHand = no;
input showMondayColor = yes;

input showWeeklyOpen = yes;
input showWeeklyPrevHL = yes;
input showWeeklyPrevMid = yes;
input showWeeklyShortHand = no;
input showWeeklyColor = yes;

input showMonthlyOpen = yes;
input showMonthlyPrevHL = yes;
input showMonthlyPrevMid = yes;
input showMonthlyShortHand = no;
input showMonthlyColor = yes;

input showQuarterlyOpen = no;
input showQuarterlyPrevHL = no;
input showQuarterlyPrevMid = no;
input showQuarterlyShortHand = no;
input showQuarterlyColor = no;

input showYearlyOpen = no;
input showYearlyPrevHL = no;
input showYearlyPrevMid = no;
input showYearlyShortHand = no;
input showYearlyColor = no;

input londonStart = 8;
input londonEnd = 16;
input nyStart = 14;
input nyEnd = 21;
input tokyoStart = 0;
input tokyoEnd = 9;



# ---- SESSION LOGIC ----
# Use SecondsFromTime for session logic (CST market hours example)
def inLondon = SecondsFromTime(londonStart * 100) >= 0 and SecondsTillTime(londonEnd * 100) > 0;
def inNY = SecondsFromTime(nyStart * 100) >= 0 and SecondsTillTime(nyEnd * 100) > 0;
def inTokyo = SecondsFromTime(tokyoStart * 100) >= 0 and SecondsTillTime(tokyoEnd * 100) > 0;

# ---- PERIOD LOGIC ----
def isNewDay = GetDay() <> GetDay()[1];
def isNewWeek = GetWeek() <> GetWeek()[1];
def isNewMonth = GetMonth() <> GetMonth()[1];
def isNewQuarter = (GetMonth() == 1 or GetMonth() == 4 or GetMonth() == 7 or GetMonth() == 10) and isNewMonth;
def isNewYear = GetYear() <> GetYear()[1];

# ---- LEVEL CALCULATIONS ----

# Daily (look back only 1 period)
def dailyOpen = open[1];
def dailyHigh = high[1];
def dailyLow = low[1];
def dailyMid = (dailyHigh + dailyLow) / 2;


# Weekly (look back only 1 period)
def weeklyOpen = open(period = AggregationPeriod.WEEK)[1];
def weeklyHigh = high(period = AggregationPeriod.WEEK)[1];
def weeklyLow = low(period = AggregationPeriod.WEEK)[1];
def weeklyMid = (weeklyHigh + weeklyLow) / 2;


# Monthly (look back only 1 period)
def monthlyOpen = open(period = AggregationPeriod.MONTH)[1];
def monthlyHigh = high(period = AggregationPeriod.MONTH)[1];
def monthlyLow = low(period = AggregationPeriod.MONTH)[1];
def monthlyMid = (monthlyHigh + monthlyLow) / 2;


# Quarterly (look back only 1 period)
def quarterlyOpen = open(period = AggregationPeriod.QUARTER)[1];
def quarterlyHigh = high(period = AggregationPeriod.QUARTER)[1];
def quarterlyLow = low(period = AggregationPeriod.QUARTER)[1];
def quarterlyMid = (quarterlyHigh + quarterlyLow) / 2;


# Yearly (look back only 1 period)
def yearlyOpen = open(period = AggregationPeriod.YEAR)[1];
def yearlyHigh = high(period = AggregationPeriod.YEAR)[1];
def yearlyLow = low(period = AggregationPeriod.YEAR)[1];
def yearlyMid = (yearlyHigh + yearlyLow) / 2;

# ---- PLOTTING ----
# Daily


plot pDailyOpen = if showDailyOpen then dailyOpen else Double.NaN;
pDailyOpen.SetDefaultColor(color.cyan);
pDailyOpen.SetLineWeight(2);
pDailyOpen.SetStyle(Curve.SHORT_DASH);
AddChartBubble(!IsNaN(pDailyOpen), pDailyOpen, "Daily Open", color.cyan, yes);



plot pDailyPrevHL = if showDailyPrevHL then dailyHigh else Double.NaN;
pDailyPrevHL.SetDefaultColor(color.cyan);
AddChartBubble(!IsNaN(pDailyPrevHL), pDailyPrevHL, "Daily High", color.cyan, yes);
plot pDailyPrevMid = if showDailyPrevMid then dailyMid else Double.NaN;
pDailyPrevMid.SetDefaultColor(color.cyan);
AddChartBubble(!IsNaN(pDailyPrevMid), pDailyPrevMid, "Daily Mid", color.cyan, yes);

# Weekly


plot pWeeklyOpen = if showWeeklyOpen then weeklyOpen else Double.NaN;
pWeeklyOpen.SetDefaultColor(color.yellow);
AddChartBubble(!IsNaN(pWeeklyOpen), pWeeklyOpen, "Weekly Open", color.yellow, yes);



plot pWeeklyPrevHL = if showWeeklyPrevHL then weeklyHigh else Double.NaN;
pWeeklyPrevHL.SetDefaultColor(color.yellow);
AddChartBubble(!IsNaN(pWeeklyPrevHL), pWeeklyPrevHL, "Weekly High", color.yellow, yes);
plot pWeeklyPrevMid = if showWeeklyPrevMid then weeklyMid else Double.NaN;
pWeeklyPrevMid.SetDefaultColor(color.yellow);
AddChartBubble(!IsNaN(pWeeklyPrevMid), pWeeklyPrevMid, "Weekly Mid", color.yellow, yes);

# Monthly


plot pMonthlyOpen = if showMonthlyOpen then monthlyOpen else Double.NaN;
pMonthlyOpen.SetDefaultColor(color.green);
AddChartBubble(!IsNaN(pMonthlyOpen), pMonthlyOpen, "Monthly Open", color.green, yes);



plot pMonthlyPrevHL = if showMonthlyPrevHL then monthlyHigh else Double.NaN;
pMonthlyPrevHL.SetDefaultColor(color.green);
AddChartBubble(!IsNaN(pMonthlyPrevHL), pMonthlyPrevHL, "Monthly High", color.green, yes);
plot pMonthlyPrevMid = if showMonthlyPrevMid then monthlyMid else Double.NaN;
pMonthlyPrevMid.SetDefaultColor(color.green);
AddChartBubble(!IsNaN(pMonthlyPrevMid), pMonthlyPrevMid, "Monthly Mid", color.green, yes);

# Quarterly


plot pQuarterlyOpen = if showQuarterlyOpen then quarterlyOpen else Double.NaN;
pQuarterlyOpen.SetDefaultColor(color.red);
AddChartBubble(!IsNaN(pQuarterlyOpen), pQuarterlyOpen, "Quarterly Open", color.red, yes);



plot pQuarterlyPrevMid = if showQuarterlyPrevMid then quarterlyMid else Double.NaN;
pQuarterlyPrevMid.SetDefaultColor(color.red);
AddChartBubble(!IsNaN(pQuarterlyPrevMid), pQuarterlyPrevMid, "Quarterly Mid", color.red, yes);

# Yearly


plot pYearlyOpen = if showYearlyOpen then yearlyOpen else Double.NaN;
pYearlyOpen.SetDefaultColor(color.magenta);
AddChartBubble(!IsNaN(pYearlyOpen), pYearlyOpen, "Yearly Open", color.magenta, yes);



plot pYearlyPrevMid = if showYearlyPrevMid then yearlyMid else Double.NaN;
pYearlyPrevMid.SetDefaultColor(color.magenta);
AddChartBubble(!IsNaN(pYearlyPrevMid), pYearlyPrevMid, "Yearly Mid", color.magenta, yes);

# ---- SESSIONS ----
def sessionLondon = inLondon;
def sessionNY = inNY;
def sessionTokyo = inTokyo;


AddCloud(if sessionLondon then high else Double.NaN, if sessionLondon then low else Double.NaN, color.cyan, color.cyan);
AddCloud(if sessionNY then high else Double.NaN, if sessionNY then low else Double.NaN, color.yellow, color.yellow);
AddCloud(if sessionTokyo then high else Double.NaN, if sessionTokyo then low else Double.NaN, color.green, color.green);

# ---- 4H, Monday Range, etc. can be added with similar logic using aggregation period or custom logic ----

# ---- END ----
